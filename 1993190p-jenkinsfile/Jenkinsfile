pipeline {
    agent any

    triggers {
        pollSCM('H/4 * * * *') // Every 4 minutes
    }

    stages {
        stage('ST1-1993190p') {
            steps {
                echo 'ST1-1993190p: Setup Release Environment Completed.'
            }
        }

        stage('ST2-1993190p') {
            steps {
                sh '''
                    docker rm -f server1-1993190p || true
                    docker run -dit --name server1-1993190p -p 32700:80 svr-image-1993190p
                    echo "ST2-1993190p: Server1 is successfully created"
                '''
            }
        }

        stage('ST3-1993190p') {
            steps {
                echo 'ST3-1993190p: Server1 is healthy â€“ Health check done'
            }
        }

        stage('ST4-Parallel-1993190p') {
            parallel {
                stage('ST4A-1993190p') {
                    steps {
                        echo 'ST4-Parallel-1993190p: Security Scrutinises'
                        echo 'ST4A-1993190p: SQLI Check Completed'
                    }
                }
                stage('ST4B-1993190p') {
                    steps {
                        echo 'ST4B-1993190p: XSS Check Completed'
                    }
                }
            }
        }

        stage('ST5-1993190p') {
            steps {
                script {
                    def userInput = input(id: 'Proceed', message: 'Continue the pipeline?', parameters: [
                        choice(name: 'Confirm', choices: ['Proceed', 'Abort'], description: 'Select an option')
                    ])

                    if (userInput == 'Proceed') {
                        echo 'ST5-1993190p: Continue the pipeline.'
                    } else {
                        error('ST5-1993190p: Pipeline aborted by user.')
                    }
                }
            }
        }

        stage('ST6-1993190p') {
            steps {
                echo 'ST6-1993190p: Ready for next phase'
            }
        }
    }
}
