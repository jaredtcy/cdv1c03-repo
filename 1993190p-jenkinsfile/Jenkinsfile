pipeline {
    agent any
    stages {
        stage('ST1-1993190p') {
            steps {
                echo 'ST1-1993190p: Setup Release Environment Completed.'
            }
        }

        stage('ST2-1993190p') {
            steps {
                sh '''
                docker rm -f server1-1993190p || true
                docker run -dit --name server1-1993190p -p 32700:80 svr-image-1993190p
                '''
                echo 'ST2-1993190p: Server1 is successfully created'
            }
        }

        stage('ST3-1993190p') {
            steps {
                echo 'ST3-1993190p: Server1 is healthy â€“ Health check done'
            }
        }

        stage('ST4-Parallel-1993190p') {
            parallel {
                stage('ST4A-1993190p') {
                    steps {
                        echo 'ST4A-1993190p: SQLI Check Completed'
                    }
                }
                stage('ST4B-1993190p') {
                    steps {
                        echo 'ST4B-1993190p: XSS Check Completed'
                    }
                }
            }
        }

        stage('ST5-1993190p') {
            steps {
                script {
                    def userInput = input(
                        id: 'userInput', message: 'Continue the pipeline?',
                        parameters: [choice(choices: ['Proceed', 'Abort'], description: 'Select option', name: 'action')]
                    )
                    if (userInput == 'Abort') {
                        error("Pipeline aborted by user.")
                    } else {
                        echo 'ST5-1993190p : Continue the pipeline.'
                    }
                }
            }
        }

        stage('ST6-1993190p') {
            steps {
                echo 'ST6-1993190p : Ready for next phase'
            }
        }
    }
}
